name: CI
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  Test:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
          - windows-2022
          - macos-13.0
        d:
          - "ldc-1.38.0"
          - "dmd-2.109.1"
        clang:
           # default setup-cpp version 
          - true
        cmake:
          - 3.28.3
        ninja:
          - 1.11.1
        exclude:
          # TODO ci job fails with object.Error@(0): Access Violation error
          - os: windows-2022
            d: dmd-2.098.1
            clang: 13.0.0
            cmake: 3.22.2
            ninja: 1.10.2
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Cache
      - name: Cache
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.dub
            ~/AppData/Local/dub
            ./src/*/build/*.lib
            ./src/*/build/*.a
            ./.dub
            ~/llvm
            ./**/download-cache
            ~/.cache/pip
            ~/AppData/Local/pip/cache
          key: "d-tree-sitter-OS:${{ matrix.os }}-D:${{ matrix.d }}-Clang:${{ matrix.clang }}-${{ matrix.cmake }}-${{ matrix.ninja }}-${{ hashFiles('./dub.sdl') }}-${{ hashFiles('./src/d_tree_sitter/tree_sitter/tree-sitter-version.txt') }}"
          restore-keys: |
            "d-tree-sitter-OS:${{ matrix.os }}-D:${{ matrix.d }}-Clang:${{ matrix.clang }}"

      # Setup compilers and tools
      - name: Setup D
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ${{ matrix.d }}

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          cmake: ${{ matrix.cmake }}
          ninja: ${{ matrix.ninja }}
          llvm: ${{ matrix.clang }}

      - name: Build
        run: dub build
        env:
          DUB_BUILD_TYPE: debug

      - name: Lint
        run: dub lint
